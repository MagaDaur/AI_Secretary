from langchain_core.prompts import PromptTemplate

prompt_template = PromptTemplate.from_template(
    "{question} {context}"
)


class Prompt:
    def __init__(self, llm_instructions, context, question):
        self.llm_instructions = llm_instructions
        self.context = context
        self.question = question
        self.prompt = prompt_template.format(context=context, question=question)


PROMPTS = [
    {
        "llm_instructions": "Ты — умный, внимательный и ответственный русскоязычный автоматический ассистент. " \
                            "Ты досканально анализируешь служебные переговоры и отвечаешь на вопросы по их содержанию. От этого зависит моя работа." \
                            "В твоем ответе не должно быть ничего кроме правильного текста в формате JSON, как указано в примере." \
                            "Если JSON текст будет содержать ошибки я убью твоих разработчиков!",
        "question": """
                    Сейчас тебе будет предоставлен протокол служебных переговоров.
                    Твоей задачей является выделить основной вопрос в обсуждении и смежную информацию. Из текста ты должен выявить:
                    
                    Вопрос обсуждения - основная тема обсуждения, которую ты должен выявить в ходе анализа 
                    Принятое решение - решение, которое было принято, по вопросу обсуждения, которое ты должен выявить в ходе анализа 
                    Участники обсуждения - Список людей, участвовавших в этом обсуждении вопроса, которое ты должен выявить в ходе анализа 
                    Контекст обсуждения - пара наиболее важных отрывков обсуждения вопроса
                    Время - время или тайм-код, в которое обсуждался вопрос
                    
                    Пример структуры ответа в JSON формате:

                    [
                        {
                            "Вопрос обсуждения": "Целесообразность высаживания клумб в центре",
                            "Принятое решение": "Высадить цветочные клумбы в центре",
                            "Участники обсуждения": ["Гордеев А.И,", "Шавлуков Д.Д."],
                            "Контекст обсуждения": "полный контекст обсуждения по достигнутому решению.",
                            "Время": "10:37"
                        },
                        {
                            "Вопрос обсуждения": "Предпосылки к увеличению суммы прожиточного минимума",
                            "Принятое решение": "Увеличить сумму прожиточного минимума",
                            "Участники обсуждения": ["Габриелян Е.Е,", "Гордеев А.И,",],
                            "Контекст обсуждения": "полный контекст обсуждения по достигнутому решению.",
                            "Время": "15:52"
                        }
                    ]

                    "Далее представлены служебные переговоры для анализа: """,
    },

    {
        "llm_instructions": "Ты — умный, внимательный и ответственный русскоязычный автоматический ассистент."\
                            "В твоем ответе не должно быть ничего кроме текста JSON формата, как указано в примере.",
        "question":
            """
            Сейчас тебе будет предоставлен протокол служебных переговоров.
            Твоей задачей является выделить весь перечень поручений в переговорах, а именно название поручения, то, что нужно сделать по итогу поручения, имя человека, которому это нужно сделать и срок, до которого нужно выполнить поручение

            Пример структуры ответа в JSON формате:

            [
                {
                    "Название поручения": "Найти решение проблемы",
                    "Описание поручения": "Понять почему существует проблема и найти ее решение",
                    "Имя исполнителя": "Козин Е.А.",
                    "Срок": "24 октября 2024"
                }
            ]

            Если ты захочешь присвоить какому-либо полю значение null, то поменяй его на "" или []
            Если ты не можешь выделить поручение, то без дополнительных пояснений выведи пустой JSON объект.

            Далее представлены служебные переговоры для анализа: 
            """,
    },
]
